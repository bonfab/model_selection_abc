getData <- function(dir = "./data/4models/"){
ancestral_migration <- load(paste(dir, "AM_2M_2N_0/ABCstat.txt"))
isolation_migration <- load(paste(dir, "IM_2M_2N_0/ABCstat.txt"))
secondary_contact <- load(paste(dir, "SC_2M_2N_0/ABCstat.txt"))
strict_isolation <- load(paste(dir, "SI_2N_0/ABCstat.txt"))
}
getData()
Sys.setlocale("LC_MESSAGES", "en_US.utf8")
getData <- function(dir = "./data/4models/"){
ancestral_migration <- load(paste(dir, "AM_2M_2N_0/ABCstat.txt"))
isolation_migration <- load(paste(dir, "IM_2M_2N_0/ABCstat.txt"))
secondary_contact <- load(paste(dir, "SC_2M_2N_0/ABCstat.txt"))
strict_isolation <- load(paste(dir, "SI_2N_0/ABCstat.txt"))
}
getData()
getData <- function(dir = "./data/4models"){
ancestral_migration <- load(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- load(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- load(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- load(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
}
getData()
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
}
getData()
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
}
getData()
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"))
View(ancestral_migration)
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
}
getData()
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"))
ancestral_migration <- cbind(ancestral_migration[,-1], data.frame("theory" = rep(factor("am"), nrow(ancestral_migration))))
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- cbind(isolation_migration[,-1], data.frame("theory" = rep(factor("im"), nrow(isolation_migration))))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- cbind(secondary_contact[,-1], data.frame("theory" = rep(factor("sc"), nrow(secondary_contact))))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- cbind(strict_isolation[,-1], data.frame("theory" = rep(factor("si"), nrow(strict_isolation))))
return(c(ancestral_migration, isolation_migration, secondary_contact, strict_isolation))
}
combineData <- function(...){
combined <- rbind(...)
return(combined)
}
view(combineData(getData()))
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"))
ancestral_migration <- cbind(ancestral_migration[,-1], data.frame("theory" = rep(factor("am"), nrow(ancestral_migration))))
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- cbind(isolation_migration[,-1], data.frame("theory" = rep(factor("im"), nrow(isolation_migration))))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- cbind(secondary_contact[,-1], data.frame("theory" = rep(factor("sc"), nrow(secondary_contact))))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- cbind(strict_isolation[,-1], data.frame("theory" = rep(factor("si"), nrow(strict_isolation))))
return(c(ancestral_migration, isolation_migration, secondary_contact, strict_isolation))
}
combineData <- function(...){
combined <- rbind(...)
return(combined)
}
View(combineData(getData()))
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"))
ancestral_migration <- cbind(ancestral_migration[,-1], data.frame("theory" = rep(factor("am"), nrow(ancestral_migration))))
View(ancestral_migration)
return()
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- cbind(isolation_migration[,-1], data.frame("theory" = rep(factor("im"), nrow(isolation_migration))))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- cbind(secondary_contact[,-1], data.frame("theory" = rep(factor("sc"), nrow(secondary_contact))))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- cbind(strict_isolation[,-1], data.frame("theory" = rep(factor("si"), nrow(strict_isolation))))
return(c(ancestral_migration, isolation_migration, secondary_contact, strict_isolation))
}
getData()
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
ancestral_migration <- cbind(ancestral_migration[,-1], data.frame("theory" = rep(factor("am"), nrow(ancestral_migration))))
View(ancestral_migration)
return()
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- cbind(isolation_migration[,-1], data.frame("theory" = rep(factor("im"), nrow(isolation_migration))))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- cbind(secondary_contact[,-1], data.frame("theory" = rep(factor("sc"), nrow(secondary_contact))))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- cbind(strict_isolation[,-1], data.frame("theory" = rep(factor("si"), nrow(strict_isolation))))
return(c(ancestral_migration, isolation_migration, secondary_contact, strict_isolation))
}
getData()
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
View(ancestral_migration)
ancestral_migration <- cbind(ancestral_migration[,-1], data.frame("theory" = rep(factor("am"), nrow(ancestral_migration))))
View(ancestral_migration)
return()
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- cbind(isolation_migration[,-1], data.frame("theory" = rep(factor("im"), nrow(isolation_migration))))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- cbind(secondary_contact[,-1], data.frame("theory" = rep(factor("sc"), nrow(secondary_contact))))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- cbind(strict_isolation[,-1], data.frame("theory" = rep(factor("si"), nrow(strict_isolation))))
return(c(ancestral_migration, isolation_migration, secondary_contact, strict_isolation))
}
getData()
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
ancestral_migration <- cbind(ancestral_migration[,-1], data.frame("theory" = rep(factor("am"), nrow(ancestral_migration))))
View(ancestral_migration)
return()
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"))
isolation_migration <- cbind(isolation_migration[,-1], data.frame("theory" = rep(factor("im"), nrow(isolation_migration))))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"))
secondary_contact <- cbind(secondary_contact[,-1], data.frame("theory" = rep(factor("sc"), nrow(secondary_contact))))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"))
strict_isolation <- cbind(strict_isolation[,-1], data.frame("theory" = rep(factor("si"), nrow(strict_isolation))))
return(c(ancestral_migration, isolation_migration, secondary_contact, strict_isolation))
}
getData()
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
ancestral_migration <- cbind(ancestral_migration[,-1], data.frame("theory" = rep(factor("am"), nrow(ancestral_migration))))
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
isolation_migration <- cbind(isolation_migration[,-1], data.frame("theory" = rep(factor("im"), nrow(isolation_migration))))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
secondary_contact <- cbind(secondary_contact[,-1], data.frame("theory" = rep(factor("sc"), nrow(secondary_contact))))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
strict_isolation <- cbind(strict_isolation[,-1], data.frame("theory" = rep(factor("si"), nrow(strict_isolation))))
return(c(ancestral_migration, isolation_migration, secondary_contact, strict_isolation))
}
combineData <- function(...){
summary(...)
return()
combined <- rbind(...)
return(combined)
}
View(combineData(getData()))
combineData <- function(...){
View(...)
combined <- rbind(...)
return(combined)
}
combineData(getData())
getData <- function(dir = "../data/4models"){
ancestral_migration <- read.table(paste(dir, "AM_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
ancestral_migration <- cbind(ancestral_migration[,-1], data.frame("theory" = rep(factor("am"), nrow(ancestral_migration))))
isolation_migration <- read.table(paste(dir, "IM_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
isolation_migration <- cbind(isolation_migration[,-1], data.frame("theory" = rep(factor("im"), nrow(isolation_migration))))
secondary_contact <- read.table(paste(dir, "SC_2M_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
secondary_contact <- cbind(secondary_contact[,-1], data.frame("theory" = rep(factor("sc"), nrow(secondary_contact))))
strict_isolation <- read.table(paste(dir, "SI_2N_0/ABCstat.txt", sep = "/"), header = TRUE)
strict_isolation <- cbind(strict_isolation[,-1], data.frame("theory" = rep(factor("si"), nrow(strict_isolation))))
return(rbind(ancestral_migration, isolation_migration, secondary_contact, strict_isolation))
}
View(getData())
install.packages("keras")
library(keras)
install_keras()
install_keras()
source(load_data.R)
data <- getDataSmall()
View(data)
source("load_data.R")
data <- getDataSmall()
View(data)
source("gradient_boosting.R")
source("gradient_boosting.R")
data <- getDataFirstN
model <- trainXGBoost(data[,-"theory"], data["theory"])
model <- trainXGBoost(data[,-ncol(data)], data[,ncol(data)])
model <- trainXGBoost(data[,-ncol(data)], data[,ncol(data)])
source("gradient_boosting.R")
odel <- trainXGBoost(data[,-ncol(data)], data[,ncol(data)])
source("gradient_boosting.R")
model <- trainXGBoost(data[,-ncol(data)], data[,ncol(data)])
print(length(unique(data[, ncol(data)])))
source("gradient_boosting.R")
model <- trainXGBoost(data[,-ncol(data)], data[,ncol(data)])
summary(data[, ncol(data)])
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
print(length(unique(data[, ncol(data)])))
model <- trainXGBoost(data[,-ncol(data)], data[,ncol(data)])
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
print(length(unique(data[, ncol(data)])))
model <- trainXGBoost(data[,-ncol(data)], data[,ncol(data)])
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]))
print(as.numeric(data[, ncol(data)]))
print(as.numeric(data[, ncol(data)]) -1 )
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
print(unique(as.numeric(data[, ncol(data)]) -1 ))
print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
print(length(unique(label)))
print(label)
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
source("gradient_boosting.R")
data <- getDataFirstN()
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- trainXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
model <- classificationXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- classificationXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- classificationXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
library(xgboost)
classificationXGBoost <- function(data, label){
dtrain <- xgb.DMatrix(data = as.matrix(data), label = as.matrix(label))
params <- list(
objective = "multi:softprob",
eval_metric = "mlogloss",
nthread = 2,
num_class = length(unique(label)),
eta_decay = .99,
eta = .005,
gamma = 1,
max_depth = 4,
min_child_weight = .9,
subsample = .7,
colsample_bytree = .5
)
bstDMatrix <- xgboost(param = params, data = dtrain, nrounds = 20)
return(bstDMatrix)
}
source("load_data.R")
source("gradient_boosting.R")
data <- getDataFirstN()
#print(length(unique(as.numeric(data[, ncol(data)]) -1 )))
model <- classificationXGBoost(data[,-ncol(data)], as.numeric(data[,ncol(data)]) - 1)
library(keras)
source("load_data.R")
source("gradient_boosting.R")
source("testing.R")
source("neural_net.R")
data <- getDataFirstN(1500)
split <- splitTrainTestSet(data)
train <- split[[1]]
test <- split[[2]]
runXGBoost <- function(train, test){
model <- trainXGBoost(train[,-ncol(train)], as.numeric(train[,ncol(train)]) - 1, 800)
predictions <- classifyXGBoost(model, test[,-ncol(test)])
validateOutput(predictions, as.numeric(test[,ncol(test)]) - 1)
}
runNN <- function(train, test){
model <- trainNN(train[,-ncol(train)], as.numeric(train[,ncol(train)]) - 1)
}
runNN(train, test)
install.packages("keras")
install.packages("xgboost")
source("load_data.R")
source("gradient_boosting.R")
source("testing.R")
source("neural_net.R")
data <- getDataFirstN(1500)
split <- splitTrainTestSet(data)
train <- split[[1]]
test <- split[[2]]
runXGBoost <- function(train, test){
model <- trainXGBoost(train[,-ncol(train)], as.numeric(train[,ncol(train)]) - 1, 800)
predictions <- classifyXGBoost(model, test[,-ncol(test)])
validateOutput(predictions, as.numeric(test[,ncol(test)]) - 1)
}
runNN <- function(train, test){
model <- trainNN(train[,-ncol(train)], as.numeric(train[,ncol(train)]) - 1)
}
runNN(train, test)
